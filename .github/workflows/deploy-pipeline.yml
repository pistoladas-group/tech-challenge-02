name: Deploy Pipelines

on:
  workflow_dispatch:

jobs:
  deploy-auth-container:
    runs-on: ubuntu-latest
    steps:
    - name: Azure Login
      id: login
      uses: Azure/login@v1.4.6
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}

    - name: Deploy TechNews Auth Container
      uses: azure/cli@v1
      with:
          max_attempts: 1
          retry_on: error
          azcliversion: latest
          inlineScript: |
            az container create \
            --resource-group ${{ vars.RESOURCE_GROUP_NAME }} \
            --assign-identity \
            --environment-variables \
            TECHNEWS_AUTH_API_DATABASE_CONNECTION_STRING="${{ secrets.AUTH_CONNECTION_STRING }}" \
            AZURE_KEY_VAULT_URL="https://${{ vars.VAULT_NAME }}.vault.azure.net/" \
            ASPNETCORE_URLS="http://+:${{ vars.AUTH_PORT }} " \
            TOKEN_EXPIRATION_IN_MINUTES="${{ vars.TOKEN_EXPIRATION_IN_MINUTES }}" \
            KEY_ROTATOR_EXECUTION_IN_MINUTES="${{ vars.KEY_ROTATOR_EXECUTION_IN_MINUTES }}" \
            KEY_CREATION_SIZE_IN_BITS="${{ vars.KEY_CREATION_SIZE_IN_BITS }}" \
            KEY_EXPIRATION_IN_DAYS="${{ vars.KEY_EXPIRATION_IN_DAYS }}" \
            CRYPTOGRAPHIC_ALGORITHM="${{ vars.CRYPTOGRAPHIC_ALGORITHM }}" \
            --memory 0.5 --cpu 1 --ports ${{ vars.AUTH_PORT }} \
            --ip-address Public \
            --dns-name-label ${{ vars.AUTH_APP_NAME }} \
            --registry-login-server ${{ vars.CONTAINER_REGISTRY_NAME}}.azurecr.io \
            --registry-username "anonymous" \
            --registry-password "anonymous" \
            --name ${{ vars.AUTH_APP_NAME }}-container \
            --image ${{ vars.CONTAINER_REGISTRY_NAME}}.azurecr.io/${{ vars.AUTH_APP_NAME }}:v1
    
    - name: Grant Access to Key Vault
      uses: azure/cli@v1
      with:
          max_attempts: 1
          retry_on: error
          azcliversion: latest
          inlineScript: |
            response=$(az container show \
            --resource-group ${{ vars.RESOURCE_GROUP_NAME }} \
            --name ${{ vars.AUTH_APP_NAME }}-container \
            --query identity --output json)

            assignee_object_id=$(echo "$response" | jq -r '.principalId')

            az role assignment create \
            --role "Key Vault Administrator" \
            --assignee-principal-type ServicePrincipal \
            --assignee-object-id "$assignee_object_id" \
            --scope /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ vars.RESOURCE_GROUP_NAME }}/providers/Microsoft.KeyVault/vaults/${{ vars.VAULT_NAME }}

    - name: Restart Container
      uses: azure/cli@v1
      with:
          max_attempts: 1
          retry_on: error
          azcliversion: latest
          inlineScript: |
            az container restart --name ${{ vars.AUTH_APP_NAME }}-container  --resource-group ${{ vars.RESOURCE_GROUP_NAME }}

    - name: Health Check Auth
      run: |
        RESPONSE=$(curl -s "http://${{ vars.AUTH_APP_NAME }}.brazilsouth.azurecontainer.io:${{ vars.AUTH_PORT }}/health")

        if [[ "$RESPONSE" == *"Healthy"* ]]; then
          echo "API is Healthy"
        else
          echo "API is not Healthy"
          exit 1
        fi

  deploy-core-container:
    runs-on: ubuntu-latest
    needs: [deploy-auth-container]
    steps:
    - name: Azure Login
      id: login
      uses: Azure/login@v1.4.6
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        
    - name: Deploy TechNews Core Container
      uses: azure/cli@v1
      with:
          max_attempts: 1
          retry_on: error
          azcliversion: latest
          inlineScript: |
            az container create \
            --resource-group ${{ vars.RESOURCE_GROUP_NAME }} \
            --environment-variables \
            TECHNEWS_CORE_API_DATABASE_CONNECTION_STRING="${{ secrets.TECHNEWS_CONNECTION_STRING }}" \
            ASPNETCORE_URLS="http://+:${{ vars.CORE_PORT }}" \
            TECHNEWS_CORE_API_AUTH_JWKS_URL="http://${{ vars.AUTH_APP_NAME }}.brazilsouth.azurecontainer.io:${{ vars.AUTH_PORT }}/jwks" \
            --memory 0.5 --cpu 1 --ports ${{ vars.CORE_PORT }} \
            --ip-address Public \
            --dns-name-label ${{ vars.CORE_APP_NAME }} \
            --registry-login-server ${{ vars.CONTAINER_REGISTRY_NAME}}.azurecr.io \
            --registry-username "anonymous" \
            --registry-password "anonymous" \
            --name ${{ vars.CORE_APP_NAME }}-container \
            --image ${{ vars.CONTAINER_REGISTRY_NAME}}.azurecr.io/${{ vars.CORE_APP_NAME }}:v1

    - name: Health Check Core
      run: |
        RESPONSE=$(curl -s "http://${{ vars.CORE_APP_NAME }}.brazilsouth.azurecontainer.io:${{ vars.CORE_PORT }}/health")

        if [[ "$RESPONSE" == *"Healthy"* ]]; then
          echo "API is Healthy"
        else
          echo "API is not Healthy"
          exit 1
        fi

  deploy-web-container:
    runs-on: ubuntu-latest
    needs: [deploy-auth-container, deploy-core-container]
    steps:
    - name: Azure Login
      id: login
      uses: Azure/login@v1.4.6
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        
    - name: Deploy TechNews Web Container
      uses: azure/cli@v1
      with:
          max_attempts: 1
          retry_on: error
          azcliversion: latest
          inlineScript: |
            az container create \
            --resource-group ${{ vars.RESOURCE_GROUP_NAME }} \
            --environment-variables \
            TECHNEWS_APP_API_AUTH_URL="http://${{ vars.AUTH_APP_NAME }}.brazilsouth.azurecontainer.io:${{ vars.AUTH_PORT }}" \
            TECHNEWS_APP_API_CORE_URL="http://${{ vars.CORE_APP_NAME }}.brazilsouth.azurecontainer.io:${{ vars.CORE_PORT }}" \
            ASPNETCORE_URLS="http://+:${{ vars.WEB_PORT }}" \
            --memory 0.5 --cpu 1 --ports ${{ vars.WEB_PORT }} \
            --ip-address Public \
            --dns-name-label ${{ vars.WEB_APP_NAME }} \
            --registry-login-server ${{ vars.CONTAINER_REGISTRY_NAME}}.azurecr.io \
            --registry-username "anonymous" \
            --registry-password "anonymous" \
            --name ${{ vars.WEB_APP_NAME }}-container \
            --image ${{ vars.CONTAINER_REGISTRY_NAME}}.azurecr.io/${{ vars.WEB_APP_NAME }}:v1
